AWSTemplateFormatVersion: '2010-09-09'

Description: |
  CPU Miner

# Help for CloudFormation Metadata
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: SIACOIN & MONERO INFORMATION
      Parameters:
      #- SiaCoinAddr
      #- SiacoinMiningPool
      - Miner
      - MoneroCoinAddr
      - MoneroMiningPool
    - Label:
        default: SPOT INSTANCES
      Parameters:
      - WorkerName
    - Label:
        default: MINER INSTANCE TYPE
      Parameters:
      - InstanceSize
      - ChooseVPC
      - KeyName
    - Label:
        default: SECURITY
      Parameters:
      - SSHAccessIP
      - SubnetIds

    ParameterLabels:
      #SiaCoinAddr:
      #  default: Siacoin Wallet Address
      #SiacoinMiningPool:
      #  default: Siacoin Mining Pool
      Miner:
        default: Which Miner to use
      MoneroCoinAddr:
        default: Monero Wallet Address (User)
      MoneroCoinPass:
        default: Monero Wallet Address (Password)
      MoneroMiningPool:
        default: Monero Mining Pool
      GPUType:
        default: Type of GPU to Use
      SpotPrice:
        default: Bid Price
      WorkerName:
        default: Worker Name
      InstanceSize:
        default: Instance Size
      MinerIntensity:
        default: Miner Intensity
      ChooseVPC:
        default: Choose a VPC
      KeyName:
        default: EC2 Key Pair
      SSHAccessIP:
        default: Restrict SSH To
      SubnetIds:
        default: Subnet Ids
# Help for CloudFormation Parameters
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:
  InstanceCount:
    Type: Number
    Default: 5
    MaxValue: 10
  #SiaCoinAddr:
  #  Description: YOUR Siacoin wallet address here.
  #  Type: String
  #  Default: 0b431fecbc09386bb1d2a22c7c248d60b3e16c1aae37bc660945240704d37048082468d33ad9
  #SiacoinMiningPool:
  #  Description: "Select a Siacoin mining pool. If you aren't sure which to select keep the default. Help can be found here: https://siamining.com/help"
  #  Type: String
  #  Default: us-west.siamining.com:3333
  #  AllowedValues:
  #  - siamining.com:3333
  #  - asia.siamining.com:3333
  #  - eu.siamining.com:3333
  #  - us-east.siamining.com:3333
  #  - us-west.siamining.com:3333
  Miner:
    Description: Which miner to use
    Type: String
    Default: xmr
    AllowedValues:
      - xmr
      - tron
      - aave
  MoneroCoinAddr:
    Description: YOUR Monero wallet address here. (xxx betterhash, uuid myriad.io)
    Type: String
    Default: xxxWALLETxxx.0000FCB0
    AllowedValues:
      - xxxWALLETxxx.0000FCB0
      - bffa8eba-8ac6-4808-8b09-f87741f14c29
  MoneroCoinPass:
    Description: YOUR Monero password.
    Type: String
    Default: xxxPASSxxx
  MoneroMiningPool:
    Description: Monero pool betterhash:3031 supportxmr:3032 tron:3034 2miners:3035
    Type: String
    Default: 98.202.252.84:3031
    AllowedValues:
      - 98.202.252.84:3031
      - mine.xmrpool.net:3333
      - pool.myriade.io:8222
      - siamining.com:3333
      - 98.202.252.84:3031
      - 98.202.252.84:3032
      - 98.202.252.84:3034
      - 98.202.252.84:3035
  SubnetIds:
    Description: The subnets where the instances will be deployed - at least 3 subnets!
    Type: List<AWS::EC2::Subnet::Id>
  # This is redundant as CloudFormation has a !Split function that we could use in the InstanceSize parameter below
  # but unfortunately, it doesn't appear to be possible to use INSIDE a FindInMap function.
  GPUType:
    Description: "Select an AWS GPU family. Note that Ohio (us-east-2) only supports p2; Singapore (ap-southeast-1), Frankfurt (eu-central-1), N. California (us-west-1) only support g2."
    Type: String
    Default: c5a
    AllowedValues:
    - p2
    - g2
    - c5a
    - t2
  SpotPrice:
    Description: "Enter a your spot bid amount. Current prices listed at: https://aws.amazon.com/ec2/spot/pricing/"
    Type: String
    Default: 0.25
    AllowedPattern: "(\\d{1})\\.(\\d{1,3})"
  WorkerName:
    Description: Enter a worker name to identify hashing efforts.
    Type: String
    Default: AWS-SPOT-MINER
  InstanceSize:
    Description: Choose either t2.small or c5a.4xlarge.
    Type: String
    Default: c5a.4xlarge
    AllowedValues:
    - g2.2xlarge
    - p2.xlarge
    - c5a.2xlarge
    - c5a.4xlarge
    - c5a.8xlarge
    - c5a.12xlarge
    - t2.small
  MinerIntensity:
    Description: Select miner intensity for marlin. Keep the default of 28 if not sure.
    Type: String
    Default: 28
  ChooseVPC:
    Description: REQUIRED - Select an EXISTING VPC to launch your Siacoin miner instances.
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: You must choose the name of an existing VPC ID.
  KeyName:
    Description: REQUIRED - Select an EXISTING EC2 key pair to launch your Siacoin miner instances.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: You must choose the name of an existing EC2 KeyPair
    Default: brad-template
  SSHAccessIP:
    Description: Enter your source IP for SSH access. Use http://ipchicken.com if not sure. Note that 0.0.0.0/0 isn't allowed to protect yourself from yourself.
    Type: String
    MinLength: 9
    MaxLength: 18
    Default : 98.202.252.84/32
    AllowedValues:
      - 0.0.0.0/0
      - 98.202.252.84/32
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})(/32)"
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/32
# Help for CloudFormation Mappings
# http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html
Mappings:
  RegionMap:
    # EU (Ireland)
    eu-west-1:
      # Redundant to have same AMI but could be useful in future if AMI should be different for each GPU family type.
      p2: ami-ed947194
      g2: ami-ed947194
      ImageId: ami-0996d3051b72b5b2c
    # Asia Pacific (Tokyo)
    ap-northeast-1:
      p2: ami-4e0e1f29
      g2: ami-4e0e1f29
      ImageId: ami-0996d3051b72b5b2c
    # Asia Pacific (Sydney)
    ap-southeast-2:
      p2: ami-e77c6f84
      g2: ami-e77c6f84
      ImageId: ami-0996d3051b72b5b2c
    # US East (N. Virginia)
    us-east-1:
      p2: ami-c5eadcd3
      g2: ami-c5eadcd3
      c5a: ami-0996d3051b72b5b2c
      t2: ami-0996d3051b72b5b2c
      ImageId: ami-03d315ad33b9d49c4
    # US East (Ohio) - only supports p2 family.
    us-east-2:
      p2: ami-c8f3a8ad
      c5a: ami-0996d3051b72b5b2c
      ImageId: ami-0996d3051b72b5b2c
    # US West (N. California) - only supports g2 family.
    us-west-1:
      g2: ami-68002c08
      c5a: ami-0996d3051b72b5b2c
      ImageId: ami-0ebef2838fb2605b7
    # US West (Oregon)
    us-west-2:
      p2: ami-aaebfcd3
      g2: ami-aaebfcd3
      c5a: ami-0996d3051b72b5b2c
      # ImageId: ami-0996d3051b72b5b2c
      ImageId: ami-0928f4202481dfdf6
    # Asia Pacific (Singapore) - only supports g2 family.
    ap-southeast-1:
      g2: ami-f35cd290
      ImageId: ami-0996d3051b72b5b2c
    # EU (Frankfurt) - only supports g2 family.
    eu-central-1:
      g2: ami-cf3294a0
      ImageId: ami-0996d3051b72b5b2c
Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  LaunchTemplate:
    DependsOn:
      - MinerInstanceProfile
      - MinerInstanceRole
      - MinerInstanceSSG
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        InstanceType:
          Ref: InstanceSize
        KeyName:
          Ref: KeyName
        ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", ImageId ]
        SecurityGroupIds:
          - !Ref MinerInstanceSSG
        UserData:
          'Fn::Base64':
            'Fn::Sub': |
              #!/bin/bash -x

              cat > /etc/systemd/system/xmrig.service << __EOF__
              [Unit]
              After=network.service
              [Service]
              ExecStart=/xmrig-6.9.0/runner.sh
              [Install]
              WantedBy=default.target
              __EOF__

              chmod 664 /etc/systemd/system/xmrig.service
              systemctl daemon-reload
              systemctl enable xmrig.service

              wget https://github.com/xmrig/xmrig/releases/download/v6.9.0/xmrig-6.9.0-focal-x64.tar.gz
              tar xvzf xmrig-6.9.0-focal-x64.tar.gz
              cd xmrig-6.9.0

              cat > hugepages.sh << __EOF__
              #!/bin/bash -e
              sysctl -w vm.nr_hugepages=$(nproc)
              for i in \$(find /sys/devices/system/node/node* -maxdepth 0 -type d);
              do
                  echo 3 > "\$i/hugepages/hugepages-1048576kB/nr_hugepages";
              done
              echo "1GB pages successfully enabled"
              __EOF__

              bash ./hugepages.sh

              cat > config.json << __EOF__
              {
                  "autosave": true,
                  "cpu": {
                    "enabled": true,
                    "huge-pages": true
                  },
                  "opencl": false,
                  "cuda": false,
                  "pools": [
                      {
                          "url": "${MoneroMiningPool}",
                          "user": "aws-remote",
                          "pass": "xxxPASSxxx",
                          "rig-id": null,
                          "tls": true
                      }
                  ]
              }
              __EOF__

              cat > runner.sh << __EOF__
              #!/bin/bash -x
              cd /xmrig-6.9.0
              echo "starting" > xmrig.log
              while (true); do

                echo -n "attempt to use miner ${Miner}"

                # these are all proxied
                case ${Miner} in
                  xmr)
                    ./xmrig -c config.json --tls -o ${MoneroMiningPool} -a rx/0 -O x:x >> xmrig.log 2>&1
                    ;;

                  tron)
                    ./xmrig -o rx.unmineable.com:3333 -a rx -k -u TRX:TCHgjbqTmqbAtcLK7Ndwsugv5CCt62oTSN.xdog
                    # ./xmrig -c config.json --tls -o ${MoneroMiningPool} -a rx -O x:x >> xmrig.log 2>&1
                    ;;

                  aave)
                    ./xmrig -o rx.unmineable.com:3333 -a rx -k -u AAVE:0x9CbF2d447CaF77d4A86B355d7f9Cc9065e48b82d.xdog
                    # ./xmrig -c config.json --tls -o ${MoneroMiningPool} -a rx -O x:x >> xmrig.log 2>&1
                    ;;

                  *)
                    echo "dunno what kind of miner to use"
                    sleep 60000
                    ;;
                esac
              done
              __EOF__
              chmod +x runner.sh
              nohup ./runner.sh &

  MinerInstanceSSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Access to Siacoin miner instance(s).
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
         Ref: SSHAccessIP
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: WorkerName
            - -MINER-SSH-ACCESS
      # As long as you have a default VPC, don't have to specify: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid
      VpcId:
        Ref: ChooseVPC

  MinerInstanceProfile:
    DependsOn:
    - MinerInstanceRole
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: MinerInstanceRole

  MinerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - Ref: AWS::Region
          - "-"
          - Fn::Join:
            - ''
            - - Ref: WorkerName
              - -MINER-INSTANCE-ROLE
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"

  MinerAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: 0
      MaxSize: !Ref InstanceCount
      DesiredCapacity: !Ref InstanceCount
      CapacityRebalance: false
      VPCZoneIdentifier: !Ref SubnetIds
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      TerminationPolicies:
        - ClosestToNextInstanceHour
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true

#Outputs:
#  SiaMiningStatistics:
#    Description: See your mining statistics here
#    Value: !Join [ "", [ "https://siamining.com/addresses/", Ref: SiaCoinAddr ] ]
